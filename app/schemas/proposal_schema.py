from marshmallow_sqlalchemy import SQLAlchemySchema, auto_field
from marshmallow import validates, ValidationError
from app.models.proposal import Proposal
from app.enums import ProposalStatusEnum
from marshmallow_enum import EnumField

class ProposalSchema(SQLAlchemySchema):
    class Meta:
        model = Proposal
        load_instance = True
        include_fk = True

    # Primary Key
    id = auto_field(dump_only=True)

    # Foreign Keys
    job_id = auto_field(required=True, error_messages={"required": "Job ID is required."})
    generated_by = auto_field(required=True, error_messages={"required": "Generated by (user ID) is required."})

    # Proposal & Submission Info
    cover_letter = auto_field()
    proposal = auto_field()
    feasibility_score = auto_field()
    feasibility_reason = auto_field()
    status = EnumField(ProposalStatusEnum, by_value=True, required=False)
    connects_required = auto_field()
    expected_cost = auto_field()
    expected_earnings = auto_field()

    # AI Analysis Fields
    job_description = auto_field()
    summary = auto_field()
    project_duration = auto_field()
    overall_score = auto_field()

    # Other Info
    tags = auto_field()
    created_at = auto_field(dump_only=True)


"""full schema with all models

Revision ID: 2f6f9fd7fe4e
Revises: 8e42ef9d9d56
Create Date: 2025-07-13 23:34:04.149249

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '2f6f9fd7fe4e'
down_revision = '8e42ef9d9d56'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('skills',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('upwork_jobs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('job_id', sa.String(length=50), nullable=False),
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('skills', sa.JSON(), nullable=True),
    sa.Column('tags', sa.JSON(), nullable=True),
    sa.Column('category', sa.String(length=100), nullable=True),
    sa.Column('client_country', sa.String(length=100), nullable=True),
    sa.Column('client_payment_verified', sa.Boolean(), nullable=True),
    sa.Column('client_total_spent', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('client_jobs_posted', sa.Integer(), nullable=True),
    sa.Column('client_hire_rate', sa.String(length=10), nullable=True),
    sa.Column('client_reviews', sa.Text(), nullable=True),
    sa.Column('budget', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('budget_type', sa.Enum('fixed', 'hourly', name='budgettypeenum'), nullable=True),
    sa.Column('project_length', sa.String(length=100), nullable=True),
    sa.Column('hours_per_week', sa.String(length=50), nullable=True),
    sa.Column('proposals_submitted', sa.Integer(), nullable=True),
    sa.Column('interviewing', sa.Integer(), nullable=True),
    sa.Column('invites_sent', sa.Integer(), nullable=True),
    sa.Column('connect_required', sa.Integer(), nullable=True),
    sa.Column('expected_cost', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('expected_earnings', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('posted_at', sa.DateTime(), nullable=True),
    sa.Column('job_url', sa.Text(), nullable=False),
    sa.Column('feasibility_status', sa.Enum('pending', 'valid', 'scam', 'unsure', name='feasibilityenum'), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('job_id')
    )
    op.create_table('upwork_profiles',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('profile_name', sa.String(length=100), nullable=False),
    sa.Column('profile_url', sa.String(length=255), nullable=False),
    sa.Column('contact', sa.String(length=20), nullable=True),
    sa.Column('email', sa.String(length=120), nullable=False),
    sa.Column('upwork_password', sa.String(length=255), nullable=False),
    sa.Column('connects_available', sa.Integer(), nullable=False),
    sa.Column('hourly_rate', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('status', sa.Enum('active', 'inactive', name='profilestatusenum'), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email')
    )
    op.create_table('workspaces',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('invite_code', sa.String(length=50), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('invite_code')
    )
    op.create_table('proposals',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('job_id', sa.Integer(), nullable=False),
    sa.Column('profile_id', sa.Integer(), nullable=False),
    sa.Column('generated_by', sa.Integer(), nullable=False),
    sa.Column('cover_letter', sa.Text(), nullable=True),
    sa.Column('feasibility_score', sa.Float(), nullable=True),
    sa.Column('feasibility_reason', sa.Text(), nullable=True),
    sa.Column('status', sa.Enum('draft', 'sent', 'rejected', 'accepted', name='proposalstatusenum'), nullable=False),
    sa.Column('connects_required', sa.Integer(), nullable=True),
    sa.Column('expected_cost', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('expected_earnings', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('sent_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('job_description', sa.Text(), nullable=True),
    sa.Column('summary', sa.Text(), nullable=True),
    sa.Column('risks', sa.JSON(), nullable=True),
    sa.Column('opportunities', sa.JSON(), nullable=True),
    sa.Column('recommendations', sa.JSON(), nullable=True),
    sa.Column('key_clauses', sa.JSON(), nullable=True),
    sa.Column('legal_compliance', sa.Text(), nullable=True),
    sa.Column('negotiation_points', sa.JSON(), nullable=True),
    sa.Column('project_duration', sa.String(length=100), nullable=True),
    sa.Column('overall_score', sa.Float(), nullable=True),
    sa.Column('performance_metrics', sa.JSON(), nullable=True),
    sa.Column('intellectual_property_clauses', sa.Text(), nullable=True),
    sa.Column('contract_type', sa.Enum('hourly', 'fixed_price', 'unknown', name='contracttypeenum'), nullable=True),
    sa.Column('user_feedback_rating', sa.Integer(), nullable=True),
    sa.Column('user_feedback_comments', sa.Text(), nullable=True),
    sa.Column('tags', sa.JSON(), nullable=True),
    sa.Column('client_score', sa.Float(), nullable=True),
    sa.Column('job_tags', sa.JSON(), nullable=True),
    sa.Column('is_follow_up_required', sa.Boolean(), nullable=True),
    sa.Column('version', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['generated_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['job_id'], ['upwork_jobs.id'], ),
    sa.ForeignKeyConstraint(['profile_id'], ['upwork_profiles.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user_skills',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('skill_id', sa.Integer(), nullable=False),
    sa.Column('proficiency', sa.String(length=50), nullable=True),
    sa.ForeignKeyConstraint(['skill_id'], ['skills.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('user_id', 'skill_id')
    )
    op.create_table('projects',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('job_id', sa.Integer(), nullable=False),
    sa.Column('team_lead_id', sa.Integer(), nullable=False),
    sa.Column('workspace_id', sa.Integer(), nullable=False),
    sa.Column('proposal_id', sa.Integer(), nullable=True),
    sa.Column('status', sa.Enum('active', 'completed', name='projectstatusenum'), nullable=False),
    sa.Column('start_date', sa.DateTime(), nullable=True),
    sa.Column('end_date', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['job_id'], ['upwork_jobs.id'], ),
    sa.ForeignKeyConstraint(['proposal_id'], ['proposals.id'], ),
    sa.ForeignKeyConstraint(['team_lead_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['workspace_id'], ['workspaces.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('project_attachments',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('project_id', sa.Integer(), nullable=False),
    sa.Column('file_name', sa.String(length=255), nullable=False),
    sa.Column('file_url', sa.String(length=512), nullable=False),
    sa.Column('uploaded_by', sa.Integer(), nullable=False),
    sa.Column('uploaded_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['project_id'], ['projects.id'], ),
    sa.ForeignKeyConstraint(['uploaded_by'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('project_members',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('project_id', sa.Integer(), nullable=False),
    sa.Column('role_in_project', sa.String(length=100), nullable=True),
    sa.Column('joined_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['project_id'], ['projects.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('tasks',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('task_code', sa.String(length=100), nullable=False),
    sa.Column('project_id', sa.Integer(), nullable=False),
    sa.Column('assigned_to', sa.Integer(), nullable=False),
    sa.Column('created_by', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('status', sa.Enum('backlog', 'todo', 'in_progress', 'in_review', 'done', name='taskstatusenum'), nullable=False),
    sa.Column('priority', sa.Enum('low', 'medium', 'high', 'critical', name='taskpriorityenum'), nullable=False),
    sa.Column('due_date', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['assigned_to'], ['users.id'], ),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['project_id'], ['projects.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('task_code')
    )
    op.create_table('task_attachments',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('task_id', sa.Integer(), nullable=False),
    sa.Column('file_name', sa.String(length=255), nullable=False),
    sa.Column('file_url', sa.String(length=512), nullable=False),
    sa.Column('uploaded_by', sa.Integer(), nullable=False),
    sa.Column('uploaded_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['task_id'], ['tasks.id'], ),
    sa.ForeignKeyConstraint(['uploaded_by'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('task_deliverables',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('task_id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('is_submitted', sa.Boolean(), nullable=False),
    sa.Column('submitted_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['task_id'], ['tasks.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('task_deliverables')
    op.drop_table('task_attachments')
    op.drop_table('tasks')
    op.drop_table('project_members')
    op.drop_table('project_attachments')
    op.drop_table('projects')
    op.drop_table('user_skills')
    op.drop_table('proposals')
    op.drop_table('workspaces')
    op.drop_table('upwork_profiles')
    op.drop_table('upwork_jobs')
    op.drop_table('skills')
    # ### end Alembic commands ###
